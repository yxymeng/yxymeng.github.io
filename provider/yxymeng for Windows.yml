parsers: # array
  - reg: ^.*$
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const rawObj = yaml.parse(raw)
        const groups = []
        const rules = []
        return yaml.stringify({ ...rawObj, 'proxy-groups': groups, rules })
      } 

    yaml:

      prepend-proxy-groups: # 建立策略组

        - name: ✈️ ‍起飞 
          type: select
          
        - name: 🚀 全球手动
          type: select

        - name: 🎮 Steam
          type: select

        - name: 🎮 Epic
          type: select

        - name: 🤖 openAI
          type: select
          proxies:
            - 🇨🇳 香港
            - 🇺🇸 美国
            - 🚀 全球手动
          
        - name: 🔍 Bing
          type: select
          proxies:
            - DIRECT
            - 🇺🇸 美国
            - 🚀 全球手动

        - name: 🐟 漏网之鱼
          type: select
          proxies:
            - DIRECT
            - ✈️ ‍起飞

        - name: 💩 ‍广告
          type: select
          proxies:
            - REJECT
            - DIRECT
            - ✈️ ‍起飞 

        #- name: 🌐 负载均衡
          #type: load-balance
          #url: http://www.gstatic.com/generate_204 
          #interval: 300
          #strategy: consistent-hashing

        - name: ⚡ 低延迟
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300

        - name: 🌏 默认全球
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300

        - name: 🇨🇳 香港
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300

        - name: 🇯🇵 日本
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300

        - name: 🇺🇸 美国
          type: url-test
          url: http://www.gstatic.com/generate_204
          interval: 300

      commands:
        - proxy-groups.🚀 全球手动.proxies=[]proxyNames
        - proxy-groups.🌏 默认全球.proxies=[]proxyNames|^[^游戏]*$
        #- proxy-groups.🌐 负载均衡.proxies=[]proxyNames|^[^游戏]*$
        - proxy-groups.⚡ 低延迟.proxies=[]proxyNames|^((?!游戏|不限流量|0.8x).)*(香港|狮城|日本|新加坡)((?!游戏|不限流量|0.8x).)*$
        - proxy-groups.🇨🇳 香港.proxies=[]proxyNames|^((?!游戏|不限流量|0.8x).)*香港((?!游戏|不限流量|0.8x).)*$
        - proxy-groups.🇯🇵 日本.proxies=[]proxyNames|^((?!游戏|不限流量|0.8x).)*日本((?!游戏|不限流量|0.8x).)*$
        - proxy-groups.🎮 Steam.proxies=[]proxyNames|土耳其|阿根廷|游戏
        - proxy-groups.🇺🇸 美国.proxies=[]proxyNames|^((?!游戏|不限流量).)*美国((?!游戏|不限流量).)*$
        
        - proxy-groups.✈️ ‍起飞.proxies.0+⚡ 低延迟
        - proxy-groups.✈️ ‍起飞.proxies.1+🇨🇳 香港
        - proxy-groups.✈️ ‍起飞.proxies.2+🇯🇵 日本
        - proxy-groups.✈️ ‍起飞.proxies.3+🇺🇸 美国
        - proxy-groups.✈️ ‍起飞.proxies.4+🚀 全球手动
        - proxy-groups.✈️ ‍起飞.proxies.5+🌏 默认全球
        #- proxy-groups.✈️ ‍起飞.proxies.6+🌐 负载均衡
        - proxy-groups.✈️ ‍起飞.proxies.6+DIRECT
        - proxy-groups.🎮 Steam.proxies.0+✈️ ‍起飞 
        - proxy-groups.🎮 Steam.proxies.1+🚀 全球手动
        - proxy-groups.🎮 Steam.proxies.2+DIRECT
        - proxy-groups.🎮 Epic.proxies.0+DIRECT
        - proxy-groups.🎮 Epic.proxies.1+✈️ ‍起飞 
        - proxy-groups.🎮 Epic.proxies.2+🚀 全球手动
                
      prepend-rules: # 规则由上往下遍历，如上面规则已经命中，则不再往下处理

        - DOMAIN,clash.razord.top,DIRECT
        - DOMAIN,yacd.haishan.me,DIRECT
        - DOMAIN-KEYWORD,github,✈️ ‍起飞
        - DOMAIN-KEYWORD,jsdelivr,✈️ ‍起飞
        
        #个人需求
        - RULE-SET,MyProxies,✈️ ‍起飞
        - RULE-SET,MyDirect,DIRECT
        - RULE-SET,Openai,🤖 openAI
        - RULE-SET,bing,🔍 Bing
        - DOMAIN-SUFFIX,messenger.live.com,🔍 Bing
        - DOMAIN,login.live.com,🔍 Bing           #微软登录
        - DOMAIN,account.live.com,🔍 Bing         #微软登录
        - DOMAIN,storage.live.com,🔍 Bing         #微软登录
        - RULE-SET,America,🇺🇸 美国

        # 白名单
        - RULE-SET,UnBan,DIRECT
        
        # 广告
        - RULE-SET,BanAD,💩 ‍广告
        - RULE-SET,BanEasyListChina,💩 ‍广告
        - RULE-SET,BanProgramAD,💩 ‍广告

        # 游戏
        - RULE-SET,Steam,🎮 Steam
        - DOMAIN-SUFFIX,epicgames.com,🎮 Epic
        - DOMAIN-SUFFIX,epicgames.dev,🎮 Epic
        - DOMAIN-SUFFIX,helpshift.com,🎮 Epic
        - DOMAIN-SUFFIX,paragon.com,🎮 Epic
        - DOMAIN-KEYWORD,unrealengine,🎮 Epic
  
        - RULE-SET,SteamCN,DIRECT
        - RULE-SET,Xbox,DIRECT
        - RULE-SET,Nintendo,✈️ ‍起飞
        - RULE-SET,Origin,✈️ ‍起飞
        - RULE-SET,Sony,DIRECT
        
        # 媒体
        - RULE-SET,ChinaMedia,DIRECT
        - RULE-SET,ProxyMedia,✈️ ‍起飞
        - RULE-SET,YouTube,✈️ ‍起飞
        
        # 开发
        - RULE-SET,Developer,✈️ ‍起飞
        
        # 18
        - RULE-SET,EHGallery,✈️ ‍起飞
        - RULE-SET,Porn,✈️ ‍起飞
        - DOMAIN-SUFFIX,hanime1.me,🇨🇳 香港
        
        # 学术
        - RULE-SET,Scholar,✈️ ‍起飞
        
        # GFW
        - RULE-SET,ProxyGFWlist,✈️ ‍起飞
        
        # 国内
        - RULE-SET,ChinaCompanyIp,DIRECT
        - RULE-SET,ChinaDomain,DIRECT
        - RULE-SET,ChinaIp,DIRECT
        
        # 本地
        - RULE-SET,LocalAreaNetwork,DIRECT
        
        # 其他
        - RULE-SET,Adobe,✈️ ‍起飞
        - RULE-SET,Google,✈️ ‍起飞
        - RULE-SET,GoogleCN,✈️ ‍起飞
        - RULE-SET,Microsoft,DIRECT
        - RULE-SET,OneDrive,✈️ ‍起飞
        - RULE-SET,Telegram,✈️ ‍起飞

        - MATCH,🐟 漏网之鱼

      mix-rule-providers: 
        # 选中 raw.githubusercontent.com 用 ctrl+shift+L 批量全改为 raw.staticdn.net 方便更新providers
        #后缀为.yaml或者.list都行
        MyProxies:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/yxymeng/yxymeng.github.io/master/proxy_personal.yaml"
          path: ./ruleset/MyProxies.yaml
          interval: 36000

        MyDirect:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/yxymeng/yxymeng.github.io/master/direct_personal.yaml"
          path: ./ruleset/MyDirect.yaml
          interval: 36000

        Steam:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/yxymeng/yxymeng.github.io/master/Steam.yaml"
          path: ./ruleset/Steam.yaml
          interval: 36000

        America:
          type: http
          behavior: classical
          url: "https://raw.githubusercontent.com/yxymeng/yxymeng.github.io/master/America.yaml"
          path: ./ruleset/America.yaml
          interval: 36000

        Openai:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/OpenAi.yaml"
          path: ./ruleset/Openai.yaml
          interval: 86400

        bing: # Bing的分流规则
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.yaml"
          path: ./ruleset/bing.yaml
          interval: 86400
    
        BanAD: # 本碎片只包含常见广告关键字、广告联盟。无副作用，放心使用
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/BanAD.yaml"
          path: ./ruleset/BanAD.yaml
          interval: 86400
          
        BanProgramAD: # 本碎片只包含常见广告关键字、广告联盟。无副作用，放心使用
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/BanProgramAD.yaml"
          path: ./ruleset/BanProgramAD.yaml
          interval: 86400

        Adobe:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Adobe.yaml"
          path: ./ACL4SSR/Adobe.yaml
          interval: 86400

        Developer:        # 内容：Developer 开发者常用国外网站、镜像和论坛
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Developer.yaml"
          path: ./ACL4SSR/Developer.yaml
          interval: 86400

        EHGallery:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/EHGallery.yaml"
          path: ./ACL4SSR/EHGallery.yaml
          interval: 86400

        Google:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Google.yaml"
          path: ./ACL4SSR/Google.yaml
          interval: 86400
      
        GoogleCN:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/GoogleCN.yaml"
          path: ./ACL4SSR/GoogleCN.yaml
          interval: 86400

        Microsoft:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Microsoft.yaml"
          path: ./ACL4SSR/Microsoft.yaml
          interval: 86400

        Nintendo:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Nintendo.yaml"
          path: ./ACL4SSR/Nintendo.yaml
          interval: 86400

        Origin:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Origin.yaml"
          path: ./ACL4SSR/Origin.yaml
          interval: 86400

        OneDrive:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/OneDrive.yaml"
          path: ./ACL4SSR/OneDrive.yaml
          interval: 86400
    
        Porn:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Porn.yaml"
          path: ./ACL4SSR/Porn.yaml
          interval: 86400
    
        Scholar:          # 国内外学术网站
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Scholar.yaml"
          path: ./ACL4SSR/Scholar.yaml
          interval: 86400
    
        Sony:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Sony.yaml"
          path: ./ACL4SSR/Sony.yaml
          interval: 86400

        SteamCN:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/SteamCN.yaml"
          path: ./ACL4SSR/SteamCN.yaml
          interval: 86400
    
        Telegram:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Telegram.yaml"
          path: ./ACL4SSR/Telegram.yaml
          interval: 86400

        Xbox:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/Xbox.yaml"
          path: ./ACL4SSR/Xbox.yaml
          interval: 86400

        YouTube:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/YouTube.yaml"
          path: ./ACL4SSR/YouTube.yaml
          interval: 86400

        BanEasyListChina:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/BanEasyListChina.yaml"
          path: ./ACL4SSR/BanEasyListChina.yaml
          interval: 86400

        ChinaCompanyIp:
          type: http
          behavior: ipcidr
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaCompanyIp.yaml"
          path: ./ACL4SSR/ChinaCompanyIp.yaml
          interval: 86400
    
        ChinaDomain:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaDomain.yaml"
          path: ./ACL4SSR/ChinaDomain.yaml
          interval: 86400
    
        ChinaIp:
          type: http
          behavior: ipcidr
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaIp.yaml"
          path: ./ACL4SSR/ChinaIp.yaml
          interval: 86400

        ChinaMedia:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/ChinaMedia.yaml"
          path: ./ACL4SSR/ChinaMedia.yaml
          interval: 86400
          
        LocalAreaNetwork:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/LocalAreaNetwork.yaml"
          path: ./ACL4SSR/LocalAreaNetwork.yaml
          interval: 86400
    
        ProxyGFWlist:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyGFWlist.yaml"
          path: ./ACL4SSR/ProxyGFWlist.yaml
          interval: 86400

        ProxyMedia:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyMedia.yaml"
          path: ./ACL4SSR/ProxyMedia.yaml
          interval: 86400
    
        UnBan:
          type: http
          behavior: classical
          url: "https://raw.staticdn.net/ACL4SSR/ACL4SSR/master/Clash/Providers/UnBan.yaml"
          path: ./ACL4SSR/UnBan.yaml
          interval: 86400 
